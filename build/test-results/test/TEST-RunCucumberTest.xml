<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RunCucumberTest" tests="2" skipped="1" failures="0" errors="0" timestamp="2020-05-24T15:16:43" hostname="toktobubu-HP-ProBook-450-G5" time="0.22">
  <properties/>
  <testcase name="user may search KinoPoisk web site for finding all films" classname="RunCucumberTest" time="0.158"/>
  <testcase name="user may search KinoPoisk web site for finding all films in Russian, too" classname="RunCucumberTest" time="0.061">
    <skipped/>
  </testcase>
  <system-out><![CDATA[
?[33mUndefined scenarios:?[0m
?[33m///home/toktobubu/SelenideCucumber/selenidcucmber/src/test/resources/features/googleKinoPoiskSearch.feature:3 ?[0m# user may search KinoPoisk web site for finding all films
?[33m///home/toktobubu/SelenideCucumber/selenidcucmber/src/test/resources/features/googleKinoPoiskSearch.feature:11 ?[0m# user may search KinoPoisk web site for finding all films in Russian, too

2 Scenarios (?[33m2 undefined?[0m)
4 Steps (?[36m1 skipped?[0m, ?[33m3 undefined?[0m)
0m0,227s


You can implement missing steps with the snippets below:

@Given("Open browser with google")
public void open_browser_with_google() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

@Then("At least top {int} matches should be shown")
public void at_least_top_matches_should_be_shown(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

@Then("The first one should be consist www.kinopoisk.ru")
public void the_first_one_should_be_consist_www_kinopoisk_ru() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
